@page "/login"
@using Isitar.TimeTracking.Frontend.Services
@layout FullpageLayout
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<section class="hero is-bold is-primary is-fullheight page-login">
    <div class="hero-body">
        <div class="container">
            <div class="columns is-centered">
                <div class="column is-5-tablet is-4-desktop is-3-widescreen">
                    @if (!string.IsNullOrWhiteSpace(Error))
                    {
                        <div class="notification is-danger">
                            <button class="delete" @onclick="e => Error = null"></button>
                            @Error
                        </div>
                    }
                    <form class="box" @onsubmit="Authenticate">


                        <div class="field">
                            <label class="label">Username (email)</label>
                            <div class="control has-icons-left">
                                <input type="text" placeholder="" class="input" @bind="Username" @bind:event="oninput" autofocus="">
                                <span class="icon is-small is-left">
                                    <Icon i="envelope"/>
                                </span>
                            </div>
                        </div>
                        <div class="field">
                            <label class="label">Password</label>
                            <div class="control has-icons-left has-icons-right">
                                <input type="@PasswordType" placeholder="*******" class="input" @bind="Password" @bind:event="oninput">
                                <span class="icon is-small is-left">
                                    <Icon i="lock"/>
                                </span>
                                <span class="icon is-small is-right show-password" @onclick="ToggleShowPassword">
                                    <Icon I="@(ShowPassword ? "eye-slash" : "eye")"/>
                                </span>
                            </div>
                        </div>
                        <div class="field">
                            <button class="button is-success is-fullwidth" type="submit">
                                Login
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@code
{

    protected string Username { get; set; }
    protected string Password { get; set; }

    protected bool ShowPassword = false;

    protected string Error { get; set; }

    protected string PasswordType => ShowPassword ? "text" : "password";


    protected  async Task Authenticate()
    {
        var res = await AuthService.LoginAsync(Username, Password);
        if (res.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = res.ErrorsCompact();
        }
    }

    protected void ToggleShowPassword()
    {
        ShowPassword = !ShowPassword;
        Console.WriteLine($"toggled password {ShowPassword}");
    }
}